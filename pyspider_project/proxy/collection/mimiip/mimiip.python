#!/usr/bin/env python
# -*- encoding: utf-8 -*-
# Created on:2016/3/15 19:48
# Project:mimiip
# Author:yangmingsong

from pyspider.libs.base_handler import *
from ms_spider_fw.DBSerivce import DBService
import time
import re
from pyquery.pyquery import PyQuery as pq

patt_pp = re.compile(r'(?<![\.\d])(?:\d{1,3}\.){3}\d{1,3}(?![\.\d]):\d{1,5}')

db_name = 'b2c_base'  # database name for store data , string
table_name = 'mimiip'  # table name for store data , string
table_title = 'proxy_port,crawl_time'  # table title for store data , should be string separated by ','
url_start = [
    # 'http://www.mimiip.com/gngao/',
    'http://www.mimiip.com/gnpu/',
    'http://www.mimiip.com/hw'
]
# connect string , usually no need to modify
connect_dict = {'host': '10.118.187.12', 'user': 'admin', 'passwd': 'admin', 'charset': 'utf8'}

# now,the next is spider script
db_server = DBService(dbName=db_name, tableName=table_name, **connect_dict)
# if create table for store result in mysql , no need to be changed
if not db_server.isTableExist():
    db_server.createTable(tableTitle=table_title.split(','))


class Handler(BaseHandler):
    crawl_config = {
    }

    @every(minutes=24 * 60)
    def on_start(self):
        self.crawl(url_start, callback=self.step_first)

    @config(age=2 * 24 * 60 * 60)
    def step_first(self, response):
        d = response.doc
        result = self.my_result(response)
        self.on_result(result)
        for t in d('.pagination>a').items():
            self.crawl(t.attr.href, callback=self.step_first)

    @config(priority=2)
    def my_result(self, response):
        t = response.text
        txt = ':'.join(pq(t).text().split(' '))
        proxy_port = re.findall(patt_pp, txt)
        crawl_time = time.strftime('%Y-%m-%d %X', time.localtime())
        return [
            [
                item,
                crawl_time
            ] for item in proxy_port
            ]

    # over ride method for result store to mysql
    def on_result(self, result):
        if result:
            db_server.data2DB(data=result)
        else:
            print u'result-->return None'
